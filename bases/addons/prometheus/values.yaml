server:
  persistentVolume:
    enabled: true
    size: 50Gi
  service:
    type: ClusterIP
    port: 9090
  ingress:
    enabled: true
    hosts:
      - prometheus.dev
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    tls:
      - hosts:
          - prometheus.dev
        secretName: prometheus-tls
  prometheusSpec:
    scrapeInterval: "30s"
    evaluationInterval: "30s"
    scrapeTimeout: "10s"
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    serviceMonitorSelector:
      matchLabels:
        release: prometheus
    ruleSelector:
      matchLabels:
        app: prometheus
    ruleNamespaceSelector:
      matchNames:
        - monitoring


kubeStateMetrics:
  enabled: true  # Collects detailed information about Kubernetes objects (Deployments, Pods, Nodes, etc.)

nodeExporter:
  enabled: true  # Monitors node (CPU, Memory, Disk, etc.)

kubeApiServer:
  enabled: true  # Collects API Server metrics

kubelet:
  enabled: true
  serviceMonitor:
    enabled: true  # Ensures Prometheus scrapes kubelet metrics

kubeScheduler:
  enabled: true
  serviceMonitor:
    enabled: true  # Monitors Kubernetes scheduler

kubeControllerManager:
  enabled: true
  serviceMonitor:
    enabled: true  # Monitors Kubernetes controller-manager

coreDns:
  enabled: true
  serviceMonitor:
    enabled: true  # Monitors CoreDNS logs

etcd:
  enabled: true
  serviceMonitor:
    enabled: true  # Monitors etcd

alertmanager:
  enabled: true
  alertmanagerSpec:
    route:
      receiver: "default"
      group_by: ["alertname", "job"]
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 3h
    receivers:
      - name: "default"
        slack_configs:
          - channel: "#alerts"
            send_resolved: true
            api_url: "https://TOKEN"
    inhibit_rules:
      - source_matchers:
          - severity="critical"
        target_matchers:
          - severity="warning"
        equal: ["alertname", "job"]
